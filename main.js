(()=>{"use strict";class e{#e;#t;GAME_CLOCK=2880;GAME_OFFSET=-.05;#i;constructor(e){this.#t=e}get inGameTimeEl(){return void 0===this.#e&&(this.#e=document.getElementById(this.#t)),this.#e}get sinceMidnight(){const e=new Date,t=new Date(e);return t.setHours(0),t.setMinutes(0),t.setSeconds(0),(e.getTime()-t.getTime())/1e3}leftPadZero(e){return`0${e}`.slice(-2)}renderTime(e,t){return`${this.leftPadZero(e)}:${this.leftPadZero(t)}`}get inGameTimeProgress(){return this.sinceMidnight%this.GAME_CLOCK}get inGameTimeDecimal(){return this.inGameTimeProgress/(this.GAME_CLOCK/24)}get inGameTime(){const e=this.inGameTimeDecimal+this.GAME_OFFSET,t=Math.floor(e),i=Math.round(e%1*60);return this.renderTime(t,i)}run(){this.inGameTimeEl.value=this.inGameTime}start(){this.inGameTimeEl&&(this.run(),void 0===this.#i&&(this.#i=setInterval(this.run.bind(this),250)))}stop(){clearInterval(this.#i),this.#i=void 0}}new e("ingame-time").start(),new MissionCalc("calc","result").setup()})();
//# sourceMappingURL=main.js.map